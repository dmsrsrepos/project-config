// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info

import { defineConfigObject, defineConfigs } from 'reactive-vscode'

export const publisher = "cnjimbo"
export const name = "project-config"
export const version = "1.1.2"
export const displayName = "Project Config Updater"
export const description = "Export current settings to workspace config file "
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "project-config.manualUpdate"
  | "project-config.remove-watch-dir"
  | "project-config.add-watch-dir"

/**
 * Commands map registed by `cnjimbo.project-config`
 */
export const commands = {
  /**
   * Update config now
   * @value `project-config.manualUpdate`
   */
  manualUpdate: "project-config.manualUpdate",
  /**
   * remove watch dir
   * @value `project-config.remove-watch-dir`
   */
  removeWatchDir: "project-config.remove-watch-dir",
  /**
   * add watch dir
   * @value `project-config.add-watch-dir`
   */
  addWatchDir: "project-config.add-watch-dir",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "xxx"
  | "project-config.test.annotations"
  | "project-config.test.color"
  | "project-config.test.partten"
  | "project-config.test.position"
  | "project-config.fileNestingUpdater.autoUpdate"
  | "project-config.fileNestingUpdater.promptOnAutoUpdate"
  | "project-config.fileNestingUpdater.autoUpdateInterval"
  | "project-config.fileNestingUpdater.upstreamRepo"
  | "project-config.fileNestingUpdater.upstreamBranch"
  | "project-config2.test.annotations"

/**
 * Types of `root of configuration` registed by `cnjimbo`
 */
export interface Root {
  /**
   * Enabled project-config inline annotations
   * @key `xxx`
   * @default `true`
   * @type `boolean`
   */
  "xxx": boolean,
}

/**
 * defaults/scope of `root of configuration` registed by `cnjimbo`
 */
const _root = {
/**
 * scope: `root of configuration`
 */
  scope: "",
/**
 * default values under `root of configuration`
 */
  defaults: {
    "xxx": true,
  } satisfies Root,
}

/**
 * config objects of `root of configuration` registed by `cnjimbo`
 */
export const rootConfigObject = defineConfigObject<Root>(
  _root.scope,
  _root.defaults
)


/**
 * configs of `root of configuration` registed by `cnjimbo`
 */
export const rootConfigs = defineConfigs<Root>(
  _root.scope,
  _root.defaults
)


/**
 * Types of `project-config` registed by `cnjimbo`
 */
export interface ProjectConfig {
  /**
   * Enabled project-config inline annotations
   * @key `project-config.test.annotations`
   * @default `true`
   * @type `boolean`
   */
  "test.annotations": boolean,
  /**
   * Icon color hex for inline displaying
   * @key `project-config.test.color`
   * @default `"auto"`
   * @type `string`
   */
  "test.color": string,
  /**
   * Icon color hex for inline displaying
   * @key `project-config.test.partten`
   * @default `["src /**\/*","docs /**\/*"]`
   * @type `array`
   */
  "test.partten": string[],
  /**
   * Position the icon before or after the icon name
   * @key `project-config.test.position`
   * @default `"before"`
   * @type `string`
   */
  "test.position": ("after" | "before"),
  /**
   * Fetch and update the latest config automatically
   * @key `project-config.fileNestingUpdater.autoUpdate`
   * @default `true`
   * @type `boolean`
   */
  "fileNestingUpdater.autoUpdate": boolean,
  /**
   * Should show up the prompt before doing auto update
   * @key `project-config.fileNestingUpdater.promptOnAutoUpdate`
   * @default `true`
   * @type `boolean`
   */
  "fileNestingUpdater.promptOnAutoUpdate": boolean,
  /**
   * The minimal interval for auto update, in minutes
   * @key `project-config.fileNestingUpdater.autoUpdateInterval`
   * @default `4320`
   * @type `number`
   */
  "fileNestingUpdater.autoUpdateInterval": number,
  /**
   * The upstream repo you want to update from
   * @key `project-config.fileNestingUpdater.upstreamRepo`
   * @default `"antfu/vscode-file-nesting-config"`
   * @type `string`
   */
  "fileNestingUpdater.upstreamRepo": string,
  /**
   * The branch name of upstream repo
   * @key `project-config.fileNestingUpdater.upstreamBranch`
   * @default `"main"`
   * @type `string`
   */
  "fileNestingUpdater.upstreamBranch": string,
}

/**
 * defaults/scope of `project-config` registed by `cnjimbo`
 */
const _projectConfig = {
/**
 * scope: `project-config`
 */
  scope: "project-config",
/**
 * default values under `project-config`
 */
  defaults: {
    "test.annotations": true,
    "test.color": "auto",
    "test.partten": ["src /**/*","docs /**/*"],
    "test.position": "before",
    "fileNestingUpdater.autoUpdate": true,
    "fileNestingUpdater.promptOnAutoUpdate": true,
    "fileNestingUpdater.autoUpdateInterval": 4320,
    "fileNestingUpdater.upstreamRepo": "antfu/vscode-file-nesting-config",
    "fileNestingUpdater.upstreamBranch": "main",
  } satisfies ProjectConfig,
}

/**
 * config objects of `project-config` registed by `cnjimbo`
 */
export const projectConfigConfigObject = defineConfigObject<ProjectConfig>(
  _projectConfig.scope,
  _projectConfig.defaults
)


/**
 * configs of `project-config` registed by `cnjimbo`
 */
export const projectConfigConfigs = defineConfigs<ProjectConfig>(
  _projectConfig.scope,
  _projectConfig.defaults
)


/**
 * Types of `project-config.test` registed by `cnjimbo`
 */
export interface Test {
  /**
   * Enabled project-config inline annotations
   * @key `project-config.test.annotations`
   * @default `true`
   * @type `boolean`
   */
  "annotations": boolean,
  /**
   * Icon color hex for inline displaying
   * @key `project-config.test.color`
   * @default `"auto"`
   * @type `string`
   */
  "color": string,
  /**
   * Icon color hex for inline displaying
   * @key `project-config.test.partten`
   * @default `["src /**\/*","docs /**\/*"]`
   * @type `array`
   */
  "partten": string[],
  /**
   * Position the icon before or after the icon name
   * @key `project-config.test.position`
   * @default `"before"`
   * @type `string`
   */
  "position": ("after" | "before"),
}

/**
 * defaults/scope of `project-config.test` registed by `cnjimbo`
 */
const _test = {
/**
 * scope: `project-config.test`
 */
  scope: "project-config.test",
/**
 * default values under `project-config.test`
 */
  defaults: {
    "annotations": true,
    "color": "auto",
    "partten": ["src /**/*","docs /**/*"],
    "position": "before",
  } satisfies Test,
}

/**
 * config objects of `project-config.test` registed by `cnjimbo`
 */
export const testConfigObject = defineConfigObject<Test>(
  _test.scope,
  _test.defaults
)


/**
 * configs of `project-config.test` registed by `cnjimbo`
 */
export const testConfigs = defineConfigs<Test>(
  _test.scope,
  _test.defaults
)


/**
 * Types of `project-config.fileNestingUpdater` registed by `cnjimbo`
 */
export interface FileNestingUpdater {
  /**
   * Fetch and update the latest config automatically
   * @key `project-config.fileNestingUpdater.autoUpdate`
   * @default `true`
   * @type `boolean`
   */
  "autoUpdate": boolean,
  /**
   * Should show up the prompt before doing auto update
   * @key `project-config.fileNestingUpdater.promptOnAutoUpdate`
   * @default `true`
   * @type `boolean`
   */
  "promptOnAutoUpdate": boolean,
  /**
   * The minimal interval for auto update, in minutes
   * @key `project-config.fileNestingUpdater.autoUpdateInterval`
   * @default `4320`
   * @type `number`
   */
  "autoUpdateInterval": number,
  /**
   * The upstream repo you want to update from
   * @key `project-config.fileNestingUpdater.upstreamRepo`
   * @default `"antfu/vscode-file-nesting-config"`
   * @type `string`
   */
  "upstreamRepo": string,
  /**
   * The branch name of upstream repo
   * @key `project-config.fileNestingUpdater.upstreamBranch`
   * @default `"main"`
   * @type `string`
   */
  "upstreamBranch": string,
}

/**
 * defaults/scope of `project-config.fileNestingUpdater` registed by `cnjimbo`
 */
const _fileNestingUpdater = {
/**
 * scope: `project-config.fileNestingUpdater`
 */
  scope: "project-config.fileNestingUpdater",
/**
 * default values under `project-config.fileNestingUpdater`
 */
  defaults: {
    "autoUpdate": true,
    "promptOnAutoUpdate": true,
    "autoUpdateInterval": 4320,
    "upstreamRepo": "antfu/vscode-file-nesting-config",
    "upstreamBranch": "main",
  } satisfies FileNestingUpdater,
}

/**
 * config objects of `project-config.fileNestingUpdater` registed by `cnjimbo`
 */
export const fileNestingUpdaterConfigObject = defineConfigObject<FileNestingUpdater>(
  _fileNestingUpdater.scope,
  _fileNestingUpdater.defaults
)


/**
 * configs of `project-config.fileNestingUpdater` registed by `cnjimbo`
 */
export const fileNestingUpdaterConfigs = defineConfigs<FileNestingUpdater>(
  _fileNestingUpdater.scope,
  _fileNestingUpdater.defaults
)


/**
 * Types of `project-config2` registed by `cnjimbo`
 */
export interface ProjectConfig2 {
  /**
   * Enabled project-config inline annotations
   * @key `project-config2.test.annotations`
   * @default `true`
   * @type `boolean`
   */
  "test.annotations": boolean,
}

/**
 * defaults/scope of `project-config2` registed by `cnjimbo`
 */
const _projectConfig2 = {
/**
 * scope: `project-config2`
 */
  scope: "project-config2",
/**
 * default values under `project-config2`
 */
  defaults: {
    "test.annotations": true,
  } satisfies ProjectConfig2,
}

/**
 * config objects of `project-config2` registed by `cnjimbo`
 */
export const projectConfig2ConfigObject = defineConfigObject<ProjectConfig2>(
  _projectConfig2.scope,
  _projectConfig2.defaults
)


/**
 * configs of `project-config2` registed by `cnjimbo`
 */
export const projectConfig2Configs = defineConfigs<ProjectConfig2>(
  _projectConfig2.scope,
  _projectConfig2.defaults
)


/**
 * Types of `project-config2.test` registed by `cnjimbo`
 */
export interface ProjectConfig2Test {
  /**
   * Enabled project-config inline annotations
   * @key `project-config2.test.annotations`
   * @default `true`
   * @type `boolean`
   */
  "annotations": boolean,
}

/**
 * defaults/scope of `project-config2.test` registed by `cnjimbo`
 */
const _projectConfig2Test = {
/**
 * scope: `project-config2.test`
 */
  scope: "project-config2.test",
/**
 * default values under `project-config2.test`
 */
  defaults: {
    "annotations": true,
  } satisfies ProjectConfig2Test,
}

/**
 * config objects of `project-config2.test` registed by `cnjimbo`
 */
export const projectConfig2TestConfigObject = defineConfigObject<ProjectConfig2Test>(
  _projectConfig2Test.scope,
  _projectConfig2Test.defaults
)


/**
 * configs of `project-config2.test` registed by `cnjimbo`
 */
export const projectConfig2TestConfigs = defineConfigs<ProjectConfig2Test>(
  _projectConfig2Test.scope,
  _projectConfig2Test.defaults
)

