// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "cnjimbo"
export const name = "project-config"
export const version = "1.1.2"
export const displayName = "Project Config Updater"
export const description = "Export current settings to workspace config file "
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "project-config.manualUpdate"

/**
 * Commands map registed by `cnjimbo.project-config`
 */
export const commands = {
  /**
   * Update config now
   * @value `project-config.manualUpdate`
   */
  manualUpdate: "project-config.manualUpdate",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "project-config.test.annotations"
  | "project-config.test.color"
  | "project-config.test.position"
  | "project-config.fileNestingUpdater.autoUpdate"
  | "project-config.fileNestingUpdater.promptOnAutoUpdate"
  | "project-config.fileNestingUpdater.autoUpdateInterval"
  | "project-config.fileNestingUpdater.upstreamRepo"
  | "project-config.fileNestingUpdater.upstreamBranch"

export interface ConfigKeyTypeMap {
  "project-config.test.annotations": boolean,
  "project-config.test.color": string,
  "project-config.test.position": ("after" | "before"),
  "project-config.fileNestingUpdater.autoUpdate": boolean,
  "project-config.fileNestingUpdater.promptOnAutoUpdate": boolean,
  "project-config.fileNestingUpdater.autoUpdateInterval": number,
  "project-config.fileNestingUpdater.upstreamRepo": string,
  "project-config.fileNestingUpdater.upstreamBranch": string,
}

export interface ConfigShorthandMap {
  testAnnotations: "project-config.test.annotations",
  testColor: "project-config.test.color",
  testPosition: "project-config.test.position",
  fileNestingUpdaterAutoUpdate: "project-config.fileNestingUpdater.autoUpdate",
  fileNestingUpdaterPromptOnAutoUpdate: "project-config.fileNestingUpdater.promptOnAutoUpdate",
  fileNestingUpdaterAutoUpdateInterval: "project-config.fileNestingUpdater.autoUpdateInterval",
  fileNestingUpdaterUpstreamRepo: "project-config.fileNestingUpdater.upstreamRepo",
  fileNestingUpdaterUpstreamBranch: "project-config.fileNestingUpdater.upstreamBranch",
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registed by `cnjimbo.project-config`
 */
export const configs = {
  /**
   * Enabled project-config inline annotations
   * @key `project-config.test.annotations`
   * @default `true`
   * @type `boolean`
   */
  testAnnotations: {
    key: "project-config.test.annotations",
    default: true,
  } as ConfigItem<"project-config.test.annotations">,
  /**
   * Icon color hex for inline displaying
   * @key `project-config.test.color`
   * @default `"auto"`
   * @type `string`
   */
  testColor: {
    key: "project-config.test.color",
    default: "auto",
  } as ConfigItem<"project-config.test.color">,
  /**
   * Position the icon before or after the icon name
   * @key `project-config.test.position`
   * @default `"before"`
   * @type `string`
   */
  testPosition: {
    key: "project-config.test.position",
    default: "before",
  } as ConfigItem<"project-config.test.position">,
  /**
   * Fetch and update the latest config automatically
   * @key `project-config.fileNestingUpdater.autoUpdate`
   * @default `true`
   * @type `boolean`
   */
  fileNestingUpdaterAutoUpdate: {
    key: "project-config.fileNestingUpdater.autoUpdate",
    default: true,
  } as ConfigItem<"project-config.fileNestingUpdater.autoUpdate">,
  /**
   * Should show up the prompt before doing auto update
   * @key `project-config.fileNestingUpdater.promptOnAutoUpdate`
   * @default `true`
   * @type `boolean`
   */
  fileNestingUpdaterPromptOnAutoUpdate: {
    key: "project-config.fileNestingUpdater.promptOnAutoUpdate",
    default: true,
  } as ConfigItem<"project-config.fileNestingUpdater.promptOnAutoUpdate">,
  /**
   * The minimal interval for auto update, in minutes
   * @key `project-config.fileNestingUpdater.autoUpdateInterval`
   * @default `4320`
   * @type `number`
   */
  fileNestingUpdaterAutoUpdateInterval: {
    key: "project-config.fileNestingUpdater.autoUpdateInterval",
    default: 4320,
  } as ConfigItem<"project-config.fileNestingUpdater.autoUpdateInterval">,
  /**
   * The upstream repo you want to update from
   * @key `project-config.fileNestingUpdater.upstreamRepo`
   * @default `"antfu/vscode-file-nesting-config"`
   * @type `string`
   */
  fileNestingUpdaterUpstreamRepo: {
    key: "project-config.fileNestingUpdater.upstreamRepo",
    default: "antfu/vscode-file-nesting-config",
  } as ConfigItem<"project-config.fileNestingUpdater.upstreamRepo">,
  /**
   * The branch name of upstream repo
   * @key `project-config.fileNestingUpdater.upstreamBranch`
   * @default `"main"`
   * @type `string`
   */
  fileNestingUpdaterUpstreamBranch: {
    key: "project-config.fileNestingUpdater.upstreamBranch",
    default: "main",
  } as ConfigItem<"project-config.fileNestingUpdater.upstreamBranch">,
}

export interface ScopedConfigKeyTypeMap {
  "test.annotations": boolean,
  "test.color": string,
  "test.position": ("after" | "before"),
  "fileNestingUpdater.autoUpdate": boolean,
  "fileNestingUpdater.promptOnAutoUpdate": boolean,
  "fileNestingUpdater.autoUpdateInterval": number,
  "fileNestingUpdater.upstreamRepo": string,
  "fileNestingUpdater.upstreamBranch": string,
}

export const scopedConfigs = {
  scope: "project-config",
  defaults: {
    "test.annotations": true,
    "test.color": "auto",
    "test.position": "before",
    "fileNestingUpdater.autoUpdate": true,
    "fileNestingUpdater.promptOnAutoUpdate": true,
    "fileNestingUpdater.autoUpdateInterval": 4320,
    "fileNestingUpdater.upstreamRepo": "antfu/vscode-file-nesting-config",
    "fileNestingUpdater.upstreamBranch": "main",
  } satisfies ScopedConfigKeyTypeMap,
}


export interface ScopedprojectConfigConfigKeyTypeMap {
  "test.annotations": boolean,
  "test.color": string,
  "test.position": ("after" | "before"),
  "fileNestingUpdater.autoUpdate": boolean,
  "fileNestingUpdater.promptOnAutoUpdate": boolean,
  "fileNestingUpdater.autoUpdateInterval": number,
  "fileNestingUpdater.upstreamRepo": string,
  "fileNestingUpdater.upstreamBranch": string,
}

export const scopedprojectConfigConfigs = {
  scope: "project-config",
  defaults: {
    "test.annotations": true,
    "test.color": "auto",
    "test.position": "before",
    "fileNestingUpdater.autoUpdate": true,
    "fileNestingUpdater.promptOnAutoUpdate": true,
    "fileNestingUpdater.autoUpdateInterval": 4320,
    "fileNestingUpdater.upstreamRepo": "antfu/vscode-file-nesting-config",
    "fileNestingUpdater.upstreamBranch": "main",
  } satisfies ScopedprojectConfigConfigKeyTypeMap,
}


export interface ScopedprojectConfigTestConfigKeyTypeMap {
  "annotations": boolean,
  "color": string,
  "position": ("after" | "before"),
}

export const scopedprojectConfigTestConfigs = {
  scope: "project-config.test",
  defaults: {
    "annotations": true,
    "color": "auto",
    "position": "before",
  } satisfies ScopedprojectConfigTestConfigKeyTypeMap,
}


export interface ScopedprojectConfigFileNestingUpdaterConfigKeyTypeMap {
  "autoUpdate": boolean,
  "promptOnAutoUpdate": boolean,
  "autoUpdateInterval": number,
  "upstreamRepo": string,
  "upstreamBranch": string,
}

export const scopedprojectConfigFileNestingUpdaterConfigs = {
  scope: "project-config.fileNestingUpdater",
  defaults: {
    "autoUpdate": true,
    "promptOnAutoUpdate": true,
    "autoUpdateInterval": 4320,
    "upstreamRepo": "antfu/vscode-file-nesting-config",
    "upstreamBranch": "main",
  } satisfies ScopedprojectConfigFileNestingUpdaterConfigKeyTypeMap,
}

